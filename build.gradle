plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

version '0.2.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    runtimeOnly "org.openjfx:javafx-base:$javafx.version:win"
    runtimeOnly "org.openjfx:javafx-base:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-base:$javafx.version:mac"
    runtimeOnly "org.openjfx:javafx-controls:$javafx.version:win"
    runtimeOnly "org.openjfx:javafx-controls:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-controls:$javafx.version:mac"
    runtimeOnly "org.openjfx:javafx-fxml:$javafx.version:win"
    runtimeOnly "org.openjfx:javafx-fxml:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-fxml:$javafx.version:mac"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:win"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:mac"
    runtimeOnly "org.openjfx:javafx-swing:$javafx.version:win"
    runtimeOnly "org.openjfx:javafx-swing:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-swing:$javafx.version:mac"
}

javafx {
    version = "18.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.swing']
}

mainClassName = 'nanami.networkwebcamerahost.AppLauncher'
jar {
    manifest {
        attributes 'Main-Class': 'nanami.networkwebcamerahost.AppLauncher'
    }
    from {
        configurations.runtimeClasspath
                .findAll { !it.name.endsWith('jar') }
                .findAll { !it.name.endWith('pom') }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}